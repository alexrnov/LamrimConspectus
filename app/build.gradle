apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
// in kotlin-base app kapt is used instead annotationProcessor
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "alexrnov.lamrim"
        minSdkVersion 15
        // To maintain your application along with each Android release, you should increase the value of this attribute
        // to match the latest API level, then thoroughly test your application on the corresponding platform version.
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        // Determine that AndroidJUnitRunner as the default test instrumentation runner
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Gradle automatically adds 'android.test.runner' as a dependency
    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    // make your app to be compiled by java8 compiler. Necessary for work Truth
    // also added because there were problem with the viewModels() method
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    testOptions { // for Robolectric:
        unitTests.includeAndroidResources = true
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    flavorDimensions "default"

    /*
    Make a separate flavors for the tests. This is necessary to use the automator
    library with sdk api 18 (android 4.3). To start the flavors with uitests, you need
    go to Menu -> Build -> Select Build Variant -> Active Build Variant = uiTestDebug
    solution kevinpelgrims https://overcoder.net/q/1000830/
     */
    productFlavors {
        production {
            minSdkVersion 14
        }
        uiTest {
            minSdkVersion 18
        }
    }

    // added because there were problem with the viewModels() method
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "androidx.core:core-ktx:1.3.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // dependencies for lifecycle
    def lifecycle_version = "2.2.0"
    // for view model
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // for kotlin view model
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // Annotation processor
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - helpers for implementing LifecycleOwner in a Service
    //implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    //implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    //implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
    // optional - Test helpers for LiveData
    //testImplementation "androidx.arch.core:core-testing:$arch_version"
    // to use the viewModels() extension function
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation "androidx.activity:activity-ktx:1.1.0"

    //implementation "android.arch.lifecycle:runtime:1.1.1"
    //annotationProcessor "android.arch.lifecycle:compiler:1.1.1"

    // for settings preferences
    implementation "androidx.preference:preference:1.1.1"
    implementation "androidx.lifecycle:lifecycle-process:2.2.0"

    // for dagger
    implementation "com.google.dagger:dagger-android:2.15"
    //annotationProcessor 'com.google.dagger:dagger-android-processor:2.15'
    kapt 'com.google.dagger:dagger-android-processor:2.15'

    // for test
    testImplementation 'junit:junit:4.12' // required - JUnit4 framework

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    // optional - Robolectric environment
    androidTestImplementation 'androidx.test:core:1.2.0'
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'com.google.truth:truth:0.42'
    // require for Truth library
    implementation "com.google.truth.extensions:truth-java8-extension:0.42"
    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    // for interacted with RecyclerViews
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.2.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.2.0'
    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK classpath.
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'
    // optional - Mockito framework
    testImplementation "org.mockito:mockito-core:2.23.4"
    // optional - hamcrest library
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    // optional -- UI testing with UI Automator (begin from API 18 Android 4.3)
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestUtil 'androidx.test:orchestrator:1.2.0'

}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
}


// necessary to cover kotlin classes with tests.
// execute gradlew copyTestClasses command in the console
task copyTestClasses(type: Copy) {
    from "build/tmp/kotlin-classes/debug"
    into "build/intermediates/classes/debug"
}

configurations {
    // answer limdale: https://stackoverflow.com/questions/54643053/gradle-error-after-upgrading-to-andoidx-the-latest-android-gradle-plugin
    androidTestImplementation.exclude module: 'guava' // for proper compile unsigned APK. Otherwise, due to the announcement "com.google.truth.extensions:truth-java8-extension:0.42", an error occurs
    //androidTestImplementation.exclude module: 'error_prone_annotations'
    //androidTestImplementation.exclude module: 'checker-qual'
}